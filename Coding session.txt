
Day-1 2 May 2022
__________________
Software

Set of programs

1. system software--- OS
2. Application software---chrome, word, excel, pwt, notepad, Eclipse (IDE)

	ready to use

customized (as per the requirements)-- banking, school management

SDLC: 

Example: FB (web application)

1. Requirement analysis---- SRS (software requirement specification)

2. System designing---- algorithms, flowcharts, pseudocodes, class diagrams, UML diagrams, DFD etc.

3. Coding phase----programming language

		IPO
		Input---process--- output

		cup of coffee
			coffee powder
			sugar
			milk
			gas
			water
			container
			lighter
			stainer
			cup

			method (process)

			Output: coffee

	Real life example:

		Login page	
		
			User id: <<input>>
			password: <<input>>
	
			process---- Validation rule

			YES: Home page 
			NO:  Error page

4. Testing phase:
	Life cycle---

5. Implementation phase: End user will start using the product/software

6. Maintenance phase:


Programming: 

Machine language (Binary language)----- 0 and 1---- computer

Intermediate--- Language translators (compiler and Interpreter)

High level laguage--- human understandable language


Logic building and problem solving skills
__________________________________________
Algorithm:
__________

example:

Calculator application
	addition
	subtraction
	multiplication
	division
	modulus

1. start
2. READ number1
3. READ number2
4. READ choice from user
5. if choice is +
	result=number1+number2

	else if choice is -	
	result=number1-number2

	else if choice is *
	result=number1*number2
	
	else if choice is /
	result=number1/number2
	
	else 
	result=number1%number2
6. PRINT result
7. stop


Assignments:

Selection construct
if
if -else
nested if
if -else-if
switch-case


1. Write an algo to check whether the entered number is odd or even
2. Write an algo to accept one number from user and display whether the number is zero/positive/negative
3. Write an algo to accept a character from user and display whether it is consonant or vowel
4. Write an algo to read the marks of 3 subjects from user and display the grade as per below conditions:
	>=85%	Grade is "A"
	>=70 and <85 Grade is "B"
	>=60 and <70 Grade is "C"
	>=50 and <60 Grade is "D"
	else
		No Grade

5. Write an algo to read a number from user and display the square and cube of entered number depending on the choice of user.
______________________________________________________________________________________________

Day-2 3 May 2022

Flowchart and Logic building exercises based on Selection and Iterative constructs

Hands on practice done in session on below problems

1. Draw a flowchart to check whether the entered number is odd or even

	Input: N
	N is even or odd

	if N is divisible by 2 then it is Even otherwise it is Odd


2. Draw a flowchart to accept one number from user and display whether the number is zero/positive/negative


3. Write an algo to accept a character from user and display whether it is consonant or vowel

	Input: ch
	'a' or '5' or '@' or "Ravita" is a String (Set of characters)

	logical operators: we combine multiple conditions
	Logical OR-----If any of the condition is TRUE 
	Logical AND----if all the conditions are TRUE

	ch=='a' or ch=='i' or ch=='e' or ch=='o' or ch=='u'
	
5 Draw a flowchart to read a number from user and display the square and cube of entered number depending on the choice of user.

		Inputs: 2 inputs
		N
		choice---'c' or 's'

_____________________________________________________________________________________________________

Assignments- Day-2

1. Draw a flowchart to accept any number between 1-7 and display corresponding day of the week.
	For eg.
	Input: 1
	Output: Sunday (First Day of the week)
	if Input is not in between 1-7, then display "Wrong number entered"
2. Draw a flowchart to accept principal amount, rate of interest and time from user and display the simple interest.

3. Draw a flowchart to accept the length and breadth from user and display whether the respective figure is Rectangle or Square

4. Draw a flowchart to accept 3 numbers from user and display the largest number

5. Draw a flowchart to accept Year from user and display whether the entered Year is leap year or not.

_____________________________________________________________________________________________________		

Agenda of Day-3

Iterative constructs and module/Procedures in Flowcharts and practical implementation in Raptor tool.


Case study:

	1. Robin is a small kid, he is trying to write the counting from 1 to N.
		His mother is trying to help him in this.
		If we want to make a program to help Robin in above case, what we concept we can use and 		how? 

		1------------Starting point (counter)
		2------------increment by 1 or add 1 in existing counter
		3
		4
		5
		.
		.
		N
	
		Constraint:
		N>1 and N<=100

		Test Case
		N=10
		expected output: 1 2 3 4 5 6 7 8 9 10


	2. User is trying to login on a web application
		User ID + password
	

Practice :

	1. Draw a flowchart to read base (b) and power (p) from user and display
		b^p

		Input:
		b=3
		p=4

		3*3*3*3= 81

	Complexity: 2


Practice : 

	Draw a flowchart to read a number (N) from user and display the factorial of entered number:

		N!
		Input: N=3
		3*2*1=6

		Input: N=5
		5*4*3*2*1= 120


___________________________________________________________________________________________ 

Procedure/Methods/Functions etc.
		
TOP DOWN Approach: It's a common approach in problem solving concepts. while we split a big problem in smaller parts till we receive simplest solution. In this way we make sure problem is easily understandable and easy to debug in case of any issue.


	Project



task1		task2		task3		task4....

task1.1 
task1.2
.
.
.

Procedures: part of program which is developed to solve a particular task. It is based on the concept of WORM (Write once run multiple) times. In Raptor we can add procedures and define the functionality. Parameters can be passed in procedures in two forms: input and output

Inputs are the values, we are passing in procedure
Output is the result we will receive after the execution of procedure.


Assignments: (4 May 2022)

1. Draw a flowchart to print the table of entered number.
2. Draw a flowchart to print the sum of first N even numbers.
3. Draw a flowchart to print the product of squares of first 5 integer numbers
4. Draw a flowchart to read 10 numbers from user and display the largest and smallest number entered by user.
5. Draw a flowchart to read a number between the range of 500-9999 and display the sum of digits of entered number.
_________________________________________________________________________________________

Agenda of Day-4

Discussion on problems

1. Procedure call in Raptor

	Draw a flowchart to read a choice from user for ---- prime number/perfect number and depending on the choice perform the respective operation.


	1. Check prime number
	2. Check perfect number
	See demonstration on GitHub "demo0505-I"

Array

	a set of similar type of elements
	
	Real life example:
		Want to create a batch for SA location wise
			aadhar number
			name
			Passout year
			DOB
			Contact number
			mail id
			address

Student1----------1000
Student2----------3590
Student3-----------500

Student={1 2 3 4 5 6..........50}
Exercises/Challenges

Challenge 1:

1. Draw a flowchart to swap two values using procedure SwapValues.
2. Draw a flowchart to print the numbers in between the range x to y those are divisible by 5 and 7.
	Constraints:
	10<=x<=100
	10<y<=150
	x<y

Arrays:

Set of homogenous element is called Array.

Need of Array:
1. When we need fixed number of elements of similar data type.
2. Need to store all elements in contiguous memory locations
3. Want to access elements randomly.
4. Array are based on static memory allocation concept, means memory is allocated to array at compile time.

Declare an Array of integer data type having size 5.
			int arr[5];

			lowest index position: 0
			highest index position: N-1, where N is the size of Array

			arr[0]
			arr[1]
			arr[2]
			arr[3]
			arr[4]

See the demonstrations of today's session on GitHub

___________________________________________________________________________________________________

Agenda of Day-5

Nested Loops/Nested selection constructs

introduction of Coding platform

